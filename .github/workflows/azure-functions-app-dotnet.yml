# This workflow will build a C# based Azure Function and deploy it to an Azure Functions App on Windows.
#
# This workflow assumes you have already created the target Azure Functions app.

name: Deploy Azure Function App

on:
  workflow_dispatch:  # This is for the manual trigger
    inputs:
      env:
        type: choice
        description: 'Select the target environment'
        required: true
        options:
        - DEV
        - QA
        - PROD

env:
  AZURE_FUNCTIONAPP_NAME_DEV: 'reporting-func-demo'   # set this to your DEV function app name on Azure
  AZURE_FUNCTIONAPP_NAME_PROD: 'reporting-func-demo-win'   # set this to your PROD function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'func-reporting-demo'       # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x'                   # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

jobs:
  build:
    runs-on: ubuntu-latest # For Linux, use ubuntu-latest
    environment: DEV
    steps:
    # Checkout the repo
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3
    - name: Deploy build to target
      run: echo "Deploying Name:${{ inputs.env }}"
      
    # Setup .NET Core SDK
    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # Run dotnet build to build the function code 
    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: bash # For Linux, use bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --property:OutputPath=./output
        popd
        
    # Publish artifact    
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4.3.1
      with:
        name: function-app
        path: ./func-reporting-demo/output

  deploy-to-dev:
   runs-on: ubuntu-latest # For Linux, use ubuntu-latest
   environment: DEV
   needs: build
   if: ${{ inputs.env  == 'DEV' }}
   steps:
    # Download published artifact
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.4
      with:
        name: function-app

    # Deploy function code to Azure Function App on Azure Cloud    
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_DEV }}
        package: '.'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

  deploy-to-prod:
   runs-on: windows-latest # For Linux, use ubuntu-latest
   environment: PROD
   needs: build
   if: ${{ (github.ref == 'refs/heads/release' || startsWith(github.ref, 'refs/heads/release'))&&  inputs.env  == 'PROD' }}
   steps:
    # Download published artifact
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.4
      with:
        name: function-app
    
    # Deploy function code to Azure Function App on Azure Cloud
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_PROD }}
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
