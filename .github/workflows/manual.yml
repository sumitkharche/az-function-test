# This is a basic workflow that is manually triggered

name: BlazeMeter-Manual workflow
on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Using API'
        default: 'World'
        required: true
        type: string
jobs:
  blazemeter_test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Trigger BlazeMeter Test
      env:
        BLAZEMETER_API_KEY_SECRET: ${{ secrets.BLAZEMETER_API_KEY_SECRET }}
      run: |
        curl -X POST https://a.blazemeter.com/api/v4/tests/YOUR_TEST_ID/start \
        -H "x-api-key: $BLAZEMETER_API_KEY_SECRET" \
        -H "Content-Type: application/json" \
        -d '{"configuration": {"plugins": []}}'
        
    - name: Wait for Test to Complete
      run: sleep 300 # Adjust sleep time based on expected test duration

    - name: Get Test Status
      env:
        BLAZEMETER_API_KEY_SECRET: ${{ secrets.BLAZEMETER_API_KEY_SECRET }}
      run: |
        TEST_STATUS=$(curl -X GET https://a.blazemeter.com/api/v4/tests/YOUR_TEST_ID/reports \
        -H "x-api-key: $BLAZEMETER_API_KEY_SECRET" \
        | jq -r '.data[0].status')
        
        if [ "$TEST_STATUS" != "ENDED" ]; then
          echo "Test is not completed successfully: $TEST_STATUS"
          exit 1
        fi

    - name: Fetch and Display Test Report
      env:
        BLAZEMETER_API_KEY_SECRET: ${{ secrets.BLAZEMETER_API_KEY_SECRET }}
      run: |
        REPORT_URL=$(curl -X GET https://a.blazemeter.com/api/v4/tests/YOUR_TEST_ID/reports \
        -H "x-api-key: $BLAZEMETER_API_KEY_SECRET" \
        | jq -r '.data[0].publicReportUrl')
        
        echo "Test Report URL: $REPORT_URL"
